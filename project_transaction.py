# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project_transaction.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import mysql.connector

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QDate, Qt
from PyQt5.QtWidgets import QMessageBox, QDialog
from db import con
from dialogs import Dialog
from PyQt5.QtGui import QColor
from project_activity import Ui_Activity
import win32com.client as win32



class Ui_Trans(object):

    #cell status 
    not_editable = QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled 
    editable = QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled | QtCore.Qt.ItemIsEditable 
    

    # Trans Pyqt Components
    TBLTrans = "" # Table Transaction
    BtnPrint = "" # BTN Print
    BtnEdit = "" # BTN Edit
    BtnAdd = "" # BTN Add
    BtnBack = "" # Back Project
    project_id = 0 # Project id # Default 0
    TBLTrans_rowcount = 0 # Row Count Default 0
    TBLTrans_id = 0 # Row Id Default 0
    TBLTrans_selectedRow = 0 # Row Id Default 0

    BtnBack=""
    ProjectTab=""

    projectName=""

    def print_trans():
      cursor = con.cursor()
      cursor.execute(f"SELECT * FROM `projects` WHERE `project_id` = {Ui_Trans.project_id}")
      res = cursor.fetchall()

      projname=res[0][1]
      projsite=res[0][3]
      category= res[0][6]
      #Reset Selected Row
      Ui_Trans.TBLTrans_id = 0
      Ui_Trans.TBLTrans_selectedRow = 0


      xlApp = win32.Dispatch('Excel.Application')
      xlApp.Visible = True

      # create a new excel workbook
      wb = xlApp.Workbooks.Add()

      # create a new excel worksheet
      ws = wb.worksheets.add
      ws.name = 'Transaction'

      rows = []
      columnHeaders = []

      maxRow=Ui_Trans.TBLTrans.rowCount()+3

      ws.Range(ws.cells(3, 1),ws.cells(maxRow, 10)).verticalalignment=-4108
      ws.Range(ws.cells(3, 1),ws.cells(maxRow, 10)).horizontalalignment=-4108

      #horizontal border
      ws.Range(ws.cells(3, 2),ws.cells(maxRow+1, 10)).Borders(3).Weight = 3

      #vertical border
      ws.Range(ws.cells(3, 1),ws.cells(maxRow, 10)).Borders(2).Weight = 3

      # retrieve columns label
      for j in range(Ui_Trans.TBLTrans.model().columnCount()):
        columnHeaders.append(Ui_Trans.TBLTrans.horizontalHeaderItem(j).text())

      # retrieve table content
      for row in range(Ui_Trans.TBLTrans.rowCount()):
        record = []
        for col in range(Ui_Trans.TBLTrans.columnCount()):
            if (col==0):
              val = Ui_Trans.TBLTrans.cellWidget(row,col)
              date = (f"{val.date().month()},{val.date().day()},{val.date().year()}")
              record.append(date)
            elif (col == 1)  | (col == 6) | (col == 7):
              record.append(Ui_Trans.TBLTrans.cellWidget(row,col).text())
            else:
              record.append(Ui_Trans.TBLTrans.item(row, col).text())    
              
        rows.append(record)

      # insert table content to Excel
      ws.Range(ws.cells(4, 2),ws.cells(len(rows)+3, len(columnHeaders)+1)).value = rows

      # insert column labels To Excel
      ws.Range(ws.cells(3, 2),ws.cells(3, len(columnHeaders)+1)).value = columnHeaders

      ws.Columns.AutoFit()
      ws.PageSetup.Orientation = 2

      ws.cells(1, 2).value = "Project"
      ws.cells(2, 2).value = "Site"

      ws.cells(1, 3).value = f": {projname} - {category}"
      ws.cells(2, 3).value = f": {projsite}"

      ws.Range(ws.Cells(1,3),ws.Cells(1,7)).MergeCells = True
      ws.Range(ws.Cells(2,3),ws.Cells(2,7)).MergeCells = True



    def process_date(date):
      index = 0
      start = 0
      flag1 = True
      flag2 = False
      flag3 = False

      while index < len(date):
        if flag1 and (date[index] == ","):
            year = date[start:index]
            start = index + 1
            flag1 = False
            flag2 = True
        elif flag2 and (date[index] == ","):
            month = date[start:index]
            start = index + 1
            flag2 = False
            flag3 = True
        if flag3:
            day = date[start:len(date)]
            break
        index = index + 1

      return QDate(int(year),int(month),int(day))

    def insert_trans(status,date_status):


      try:
        
        cursor = con.cursor()
        query = f"SELECT * FROM `projects` WHERE `project_id`={Ui_Trans.project_id}"
        cursor.execute(query)
        res = cursor.fetchall()
        d1=""
        d2=""
        for x in res:
            d1=x[4]
            d2=x[5]

        # process date
        startdate = QDate(Ui_Trans.process_date(d1))
        enddate = QDate(Ui_Trans.process_date(d2))
        
        # Price & Quantity Num Validator
        my_regex = QtCore.QRegExp("^\\d{1,6}(\\.\\d{1,2})?$")
        my_regex_num = QtCore.QRegExp("^[0-9]*$")
        #Font for Input
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)

        cursor = con.cursor()
        cursor.execute(f"SELECT * FROM `transaction` WHERE `project_id` = {Ui_Trans.project_id}")
        res = cursor.fetchall()

        # Remove Rows
        while(Ui_Trans.TBLTrans.rowCount() > 0):
            Ui_Trans.TBLTrans.removeRow(0)

        Ui_Trans.TBLTrans.setRowCount(len(res))
        rowcount = len(res) 
        Ui_Trans.TBLTrans_rowcount = len(res) 

        row = 0
        for x in res:

            # Set Vertical Item (For Trans ID)
            item = QtWidgets.QTableWidgetItem()
            Ui_Trans.TBLTrans.setVerticalHeaderItem(row, item)
            item = Ui_Trans.TBLTrans.verticalHeaderItem(row)
            item.setText(str(x[0]))



            #transaction data array
            trans_data = []

            DateTrans = QtWidgets.QDateEdit(Ui_Trans.TBLTrans)
            DateTrans.setCalendarPopup(True)
            DateTrans.setFont(font)
            DateTrans.setDate(Ui_Trans.process_date(x[3]))
            DateTrans.setAlignment(QtCore.Qt.AlignCenter)
            DateTrans.setEnabled(date_status)
            DateTrans.setStyleSheet("color: rgb(255, 255, 255);")

            # set min max
            DateTrans.setMinimumDate(startdate)
            DateTrans.setMaximumDate(enddate)
            
            #LEReceipt
            LEReceipt = QtWidgets.QLineEdit(Ui_Trans.TBLTrans)
            LEReceipt.setGeometry(QtCore.QRect(0, 0, 100, 31))
            LEReceipt.setAlignment(QtCore.Qt.AlignCenter)
            LEReceipt.setStyleSheet("color:white;")
            LEReceipt.setObjectName("LEReceipt")
            LEReceipt.setText(str(x[2]))
            LEReceipt.setFont(font)
            LEReceipt.setEnabled(date_status)

            my_validator = QtGui.QRegExpValidator(my_regex_num,LEReceipt)
            LEReceipt.setValidator(my_validator)

            #LEPrice
            LEPrice = QtWidgets.QLineEdit(Ui_Trans.TBLTrans)
            LEPrice.setGeometry(QtCore.QRect(0, 0, 100, 31))
            LEPrice.setAlignment(QtCore.Qt.AlignCenter)
            LEPrice.setStyleSheet("color:white;")
            LEPrice.setObjectName("LEPrice")
            LEPrice.setText(str(x[8]))
            LEPrice.setFont(font)
            LEPrice.setEnabled(date_status)

            my_validator = QtGui.QRegExpValidator(my_regex,LEPrice)
            LEPrice.setValidator(my_validator)

            #LEQuantity
            LEQuantity = QtWidgets.QLineEdit(Ui_Trans.TBLTrans)
            LEQuantity.setGeometry(QtCore.QRect(0, 0, 100, 31))
            LEQuantity.setAlignment(QtCore.Qt.AlignCenter)
            LEQuantity.setStyleSheet("color:white;")
            LEQuantity.setObjectName("LEQuantity")
            LEQuantity.setText(str(x[9]))
            LEQuantity.setFont(font)
            LEQuantity.setEnabled(date_status)

            my_validator = QtGui.QRegExpValidator(my_regex,LEQuantity)
            LEQuantity.setValidator(my_validator)


            # Append in Array (In Order)
            trans_data.append(DateTrans)
            trans_data.append(LEReceipt)
            trans_data.append(x[4])
            trans_data.append(x[5])
            trans_data.append(x[6])
            trans_data.append(x[7])
            trans_data.append(LEPrice)
            trans_data.append(LEQuantity)
            trans_data.append(x[10])
            
            #Set Cell Data
            for column in range(0,9):
              item = QtWidgets.QTableWidgetItem()
              item.setTextAlignment(QtCore.Qt.AlignCenter)
              # Total Not Editable
              if column == 8:
                item.setFlags(Ui_Trans.not_editable)
              else:
                item.setFlags(status) # Default not editable

              # Date Format for First Column
              if (column == 0) | (column == 1)  | (column == 6) | (column == 7):
                Ui_Trans.TBLTrans.setCellWidget(row, column,trans_data[column])
              else:
                item.setText(str(trans_data[column])) # trans data
                Ui_Trans.TBLTrans.setItem(row, column, item)
              
             

            row = row + 1
        
      except mysql.connector.Error as e:
        Dialog.msg_dialog("Server Error Please Try Again")

    def default():

      Ui_Trans.BtnAdd.show()
      Ui_Trans.BtnPrint.show()
      Ui_Trans.BtnEdit.show()
      Ui_Trans.BtnRemove.show()

      Ui_Trans.BtnSave.hide()
      Ui_Trans.BtnCancel.hide()

      Ui_Trans.BtnBack.show()
      Ui_Trans.ProjectTab.setEnabled(True)

    def remove_trans():
      if Ui_Trans.TBLTrans_id > 0:
        if Dialog.confirm_dialog(f"Are you sure you want to remove transaction record at row number {Ui_Trans.TBLTrans_selectedRow + 1} ?") == QMessageBox.Ok:
            try:
              cursor = con.cursor()
              query = (f"DELETE FROM `transaction` WHERE `id` = {Ui_Trans.TBLTrans_id}")
              cursor.execute(query)
              con.commit()
              Dialog.msg_dialog(f"Transaction Record at row number {Ui_Trans.TBLTrans_selectedRow + 1} successfuly removed !")
              
              Ui_Activity.record_activity("admin",f"Removed Transaction Record from Project: {Ui_Trans.projectName}")

              # Reset Values
              Ui_Trans.insert_trans(Ui_Trans.not_editable,False)
              Ui_Trans.TBLTrans_id = 0
              Ui_Trans.TBLTrans_selectedRow = 0
            except mysql.connector.Error as e:
              Dialog.msg_dialog("Server Error Please Try Again Later")
      else:
        Dialog.msg_dialog("Please select a row first")
        

    def cancel_trans():

      if (Dialog.confirm_dialog("Are you sure you want to discard changes?") == QMessageBox.Ok):
        
        Ui_Trans.insert_trans(Ui_Trans.not_editable,False)
        # Set Default Button
        Ui_Trans.default()
        

    def edit_trans():

      Ui_Trans.insert_trans(Ui_Trans.editable,True)

      Ui_Trans.BtnAdd.hide()
      Ui_Trans.BtnPrint.hide()
      Ui_Trans.BtnEdit.hide()
      Ui_Trans.BtnRemove.hide()

      Ui_Trans.BtnSave.show()
      Ui_Trans.BtnCancel.show()

      #Reset Selected Row
      Ui_Trans.TBLTrans_id = 0
      Ui_Trans.TBLTrans_selectedRow = 0

      Ui_Trans.BtnBack.hide()
      Ui_Trans.ProjectTab.setEnabled(False)


    def save_trans():

      if (Dialog.confirm_dialog("Are you sure you want to update changes?") == QMessageBox.Ok):
        

        rows = Ui_Trans.TBLTrans.rowCount()
        x=0
        trans_id = ""
        invalid = False
        invalid_row = ""

        for i in range(rows):
            receipt = Ui_Trans.TBLTrans.cellWidget(x,1).text()
            supplier = Ui_Trans.TBLTrans.item(x,2).text()
            address = Ui_Trans.TBLTrans.item(x,3).text()
            articles = Ui_Trans.TBLTrans.item(x,4).text()
            unit = Ui_Trans.TBLTrans.item(x,5).text()
            # trans amount
            price = Ui_Trans.TBLTrans.cellWidget(x,6).text()
            quantity = Ui_Trans.TBLTrans.cellWidget(x,7).text()
            #total = float(price) * float(quantity)

            if (receipt == "" or supplier == "" or address == "" or articles == "" or unit == "" or price == "" or quantity == ""):
                invalid = True
                invalid_row = invalid_row + ", " + str(i+1)
            elif (float(price) <= 0 or float(quantity) <= 0):
                invalid = True
                invalid_row = invalid_row + ", " + str(i+1)

            x = x + 1


        if invalid == False:
            x=0
            for i in range(rows):
              trans_id = Ui_Trans.TBLTrans.verticalHeaderItem(x).text()
              trans_date = (f"{Ui_Trans.TBLTrans.cellWidget(x,0).date().year()},{Ui_Trans.TBLTrans.cellWidget(x,0).date().month()},{Ui_Trans.TBLTrans.cellWidget(x,0).date().day()}")
              receipt = Ui_Trans.TBLTrans.cellWidget(x,1).text()
              supplier = Ui_Trans.TBLTrans.item(x,2).text()
              address = Ui_Trans.TBLTrans.item(x,3).text()
              articles = Ui_Trans.TBLTrans.item(x,4).text()
              unit = Ui_Trans.TBLTrans.item(x,5).text()
              price = Ui_Trans.TBLTrans.cellWidget(x,6).text()
              quantity = Ui_Trans.TBLTrans.cellWidget(x,7).text()
              total = float(price) * float(quantity)

              try:
                cursor = con.cursor()
                query1 = f"UPDATE `transaction` SET `trans_date`= '{trans_date}', `receipt_no` = {receipt}, `supplier` = '{supplier}', `address` = '{address}', `articles` = '{articles}', `unit` = '{unit}', `unit_price` = {price}, `quantity` = {quantity}, `total` = {total}   WHERE `id`={trans_id}"
                cursor.execute(query1)
                con.commit()
              except mysql.connector.Error as e:
                Dialog.msg_dialog(str(e))
                #Dialog.msg_dialog("Server Error Please Try Again")


              x = x + 1 # Another Row
            # Refresh Table
            Ui_Trans.insert_trans(Ui_Trans.not_editable,False)
            # Set Default Button
            Ui_Trans.default()
            Dialog.msg_dialog("Transaction Update Success")
            Ui_Activity.record_activity("admin",f"Updated Transaction Record from Project: {Ui_Trans.projectName}")

        else:
            invalid_row = invalid_row.replace(",","",1)
            Dialog.msg_dialog(f"Transaction Update Unsuccessful \u2794 Invalid Input at Row(s) {invalid_row.strip()}")


    def TBLTrans_select(selected, deselected):
      for x in selected.indexes():
        x=x.row()
        Ui_Trans.TBLTrans_selectedRow = x
        Ui_Trans.TBLTrans_id = int(Ui_Trans.TBLTrans.verticalHeaderItem(x).text())

      '''
      for x in range(0,14):
        Ui_Trans.TBLTrans.item(Ui_Trans.TBLTrans_selectedRow,x).setBackground(QColor('#666666'))
      '''
      

    def Transaction(TransactionWidget,DashbaordWindow,BtnBack,ProjectTab):
      #Font for Title
      font = QtGui.QFont()
      font.setFamily("Calibri")
      font.setPointSize(16)
      font.setBold(True)
      font.setWeight(75)


      # Transaction Title
      LBTransTitle = QtWidgets.QLabel(TransactionWidget)
      LBTransTitle.setGeometry(QtCore.QRect(10, 10, 271, 31))
      LBTransTitle.setFont(font)
      LBTransTitle.setStyleSheet("color: rgb(255, 255, 255);")
      LBTransTitle.setAlignment(QtCore.Qt.AlignCenter)
      LBTransTitle.setObjectName("LBTransTitle")

      # Set Font to 12 (Buttons)
      font.setPointSize(12)
      
      # Print Button
      Ui_Trans.BtnPrint = QtWidgets.QPushButton(TransactionWidget)
      Ui_Trans.BtnPrint.setGeometry(QtCore.QRect(950, 10, 100, 31))
      Ui_Trans.BtnPrint.setFont(font)
      Ui_Trans.BtnPrint.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_Trans.BtnPrint.setStyleSheet("background-color: rgb(0, 0, 0.9);color: rgb(255, 255, 255);border-radius:5px;")
      icon = QtGui.QIcon()
      icon.addPixmap(QtGui.QPixmap(":/Icons/Assets/PrintIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_Trans.BtnPrint.setIcon(icon)
      Ui_Trans.BtnPrint.setObjectName("BtnPrint")

      # Edit Button
      Ui_Trans.BtnEdit = QtWidgets.QPushButton(TransactionWidget)
      Ui_Trans.BtnEdit.setGeometry(QtCore.QRect(450, 10, 100, 31))
      Ui_Trans.BtnEdit.setFont(font)
      Ui_Trans.BtnEdit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_Trans.BtnEdit.setStyleSheet("background-color: rgb(0, 0, 0.9);color: rgb(255, 255, 255);border-radius:5px;")
      icon1 = QtGui.QIcon()
      icon1.addPixmap(QtGui.QPixmap(":/Icons/Assets/EditIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_Trans.BtnEdit.setIcon(icon1)
      Ui_Trans.BtnEdit.setObjectName("BtnEdit")

      # Add Button
      Ui_Trans.BtnAdd = QtWidgets.QPushButton(TransactionWidget)
      Ui_Trans.BtnAdd.setGeometry(QtCore.QRect(310, 10, 100, 31))
      Ui_Trans.BtnAdd.setFont(font)
      Ui_Trans.BtnAdd.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_Trans.BtnAdd.setStyleSheet("background-color: rgb(0, 0, 0.9);color: rgb(255, 255, 255);border-radius:5px;")
      icon2 = QtGui.QIcon()
      icon2.addPixmap(QtGui.QPixmap(":/Icons/Assets/AddIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_Trans.BtnAdd.setIcon(icon2)
      Ui_Trans.BtnAdd.setObjectName("BtnAdd")


      # Edit Save
      Ui_Trans.BtnSave = QtWidgets.QPushButton(TransactionWidget)
      Ui_Trans.BtnSave.setGeometry(QtCore.QRect(310, 10, 100, 31))
      Ui_Trans.BtnSave.setFont(font)
      Ui_Trans.BtnSave.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_Trans.BtnSave.setStyleSheet("background-color: rgb(0, 0, 0.9);color: rgb(255, 255, 255);border-radius:5px;")
      icon1 = QtGui.QIcon()
      icon1.addPixmap(QtGui.QPixmap(":/Icons/Assets/SaveIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_Trans.BtnSave.setIcon(icon1)
      Ui_Trans.BtnSave.setObjectName("BtnSave")
      Ui_Trans.BtnSave.setText("Save")
      Ui_Trans.BtnSave.hide()

      # Add Cancel
      Ui_Trans.BtnCancel = QtWidgets.QPushButton(TransactionWidget)
      Ui_Trans.BtnCancel.setGeometry(QtCore.QRect(450, 10, 100, 31))
      Ui_Trans.BtnCancel.setFont(font)
      Ui_Trans.BtnCancel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_Trans.BtnCancel.setStyleSheet("background-color: rgb(0, 0, 0.9);color: rgb(255, 255, 255);border-radius:5px;")
      icon2 = QtGui.QIcon()
      icon2.addPixmap(QtGui.QPixmap(":/Icons/Assets/CancelIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_Trans.BtnCancel.setIcon(icon2)
      Ui_Trans.BtnCancel.setObjectName("BtnCancel")
      Ui_Trans.BtnCancel.setText("Cancel")
      Ui_Trans.BtnCancel.hide()


       # Add Remove
      Ui_Trans.BtnRemove = QtWidgets.QPushButton(TransactionWidget)
      Ui_Trans.BtnRemove.setGeometry(QtCore.QRect(590, 10, 100, 31))
      Ui_Trans.BtnRemove.setFont(font)
      Ui_Trans.BtnRemove.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_Trans.BtnRemove.setStyleSheet("background-color: rgb(0, 0, 0.9);color: rgb(255, 255, 255);border-radius:5px;")
      icon2 = QtGui.QIcon()
      icon2.addPixmap(QtGui.QPixmap(":/Icons/Assets/RemoveIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_Trans.BtnRemove.setIcon(icon2)
      Ui_Trans.BtnRemove.setObjectName("BtnRemove")
      Ui_Trans.BtnRemove.setText("Remove")
      

      # Transaction TGroup (Table)
      Transaction = QtWidgets.QGroupBox(TransactionWidget)
      Transaction.setGeometry(QtCore.QRect(10, 60, 1041, 345))
      Transaction.setStyleSheet("border:none;color:white;")
      Transaction.setTitle("")
      Transaction.setObjectName("Transaction")

      # BG Transaction Table
      BgTrans = QtWidgets.QLabel(Transaction)
      BgTrans.setGeometry(QtCore.QRect(0, 0, 1041, 345))
      BgTrans.setStyleSheet("background-color: rgb(148, 0, 2,.4);border-radius:8px;")
      BgTrans.setText("")
      BgTrans.setObjectName("BGTrans")

      # Item Fonts ( ! Bold )
      font = QtGui.QFont()
      font.setFamily("Calibri")
      font.setPointSize(12)

      # Transaction Table
      Ui_Trans.TBLTrans = QtWidgets.QTableWidget(Transaction)
      Ui_Trans.TBLTrans.setGeometry(QtCore.QRect(10, 11, 1021, 321))
      Ui_Trans.TBLTrans.setFont(font)
      Ui_Trans.TBLTrans.setStyleSheet("QTableWidget::item{border:1px solid white;}QTableWidget{border:1px solid white;color:white;}")
      Ui_Trans.TBLTrans.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
      Ui_Trans.TBLTrans.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
      Ui_Trans.TBLTrans.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
      Ui_Trans.TBLTrans.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
      Ui_Trans.TBLTrans.setGridStyle(QtCore.Qt.SolidLine)
      Ui_Trans.TBLTrans.setObjectName("TBLTrans")
      Ui_Trans.TBLTrans.setColumnCount(9) # Fix 9 Columns
      Ui_Trans.TBLTrans.horizontalHeader().setVisible(True)
      Ui_Trans.TBLTrans.horizontalHeader().setCascadingSectionResizes(False)
      Ui_Trans.TBLTrans.horizontalHeader().setDefaultSectionSize(112)
      Ui_Trans.TBLTrans.horizontalHeader().setStyleSheet('''::section{background-color:transparent;color:white;border:1px solid white;font-weight:bold;height:50px;font-size:14px;}''')
      Ui_Trans.TBLTrans.verticalHeader().setVisible(False)
      Ui_Trans.TBLTrans.verticalHeader().setCascadingSectionResizes(False)
      Ui_Trans.TBLTrans.verticalHeader().setDefaultSectionSize(35)
      Ui_Trans.TBLTrans.verticalHeader().setHighlightSections(False)

      # Transaction Table Row slection
      Ui_Trans.TBLTrans.selectionModel().selectionChanged.connect(Ui_Trans.TBLTrans_select)

      #Table Properties
      Ui_Trans.TBLTrans.setColumnWidth(2,400) # Article
      Ui_Trans.TBLTrans.setColumnWidth(3,400) # Supplier
      Ui_Trans.TBLTrans.setColumnWidth(4,400) # Address
      Ui_Trans.TBLTrans.setColumnWidth(5,100) # Unit
      Ui_Trans.TBLTrans.setColumnWidth(6,100) # Price 
      Ui_Trans.TBLTrans.setColumnWidth(7,100) # Quantity
      Ui_Trans.TBLTrans.setColumnWidth(8,100) # Amount


      # SetText Defaults
      _translate = QtCore.QCoreApplication.translate

      LBTransTitle.setText(_translate("DashbaordWindow", "Transaction Record"))
      Ui_Trans.BtnPrint.setText(_translate("DashbaordWindow", "  Print"))
      Ui_Trans.BtnEdit.setText(_translate("DashbaordWindow", "Edit"))
      Ui_Trans.BtnAdd.setText(_translate("DashbaordWindow", "Add"))
      __sortingEnabled = Ui_Trans.TBLTrans.isSortingEnabled()
      Ui_Trans.TBLTrans.setSortingEnabled(False)
      Ui_Trans.TBLTrans.setSortingEnabled(__sortingEnabled)


      #load form

      Ui_FormTrans.FormTrans(DashbaordWindow)

      # Horizontal Headers
      hheader = ['Transaction \n Date','Receipt \n Number','Supplier \n Name','Address','Article','Unit','Price \n Per  Unit','Quantity','Amount']
      for x in range(0,9):
        item = QtWidgets.QTableWidgetItem()
        Ui_Trans.TBLTrans.setHorizontalHeaderItem(x, item)
        item = Ui_Trans.TBLTrans.horizontalHeaderItem(x)
        item.setText(hheader[x])

      # Functions
      Ui_Trans.BtnAdd.clicked.connect(Ui_FormTrans.show_form_trans)
      Ui_Trans.BtnCancel.clicked.connect(Ui_Trans.cancel_trans)
      Ui_Trans.BtnEdit.clicked.connect(Ui_Trans.edit_trans)
      Ui_Trans.BtnSave.clicked.connect(Ui_Trans.save_trans)
      Ui_Trans.BtnRemove.clicked.connect(Ui_Trans.remove_trans)
      Ui_Trans.BtnPrint.clicked.connect(Ui_Trans.print_trans)



      Ui_Trans.BtnBack=BtnBack
      Ui_Trans.ProjectTab=ProjectTab


class Ui_FormTrans(object):

    #------------------------------Transaction-----------------------------#

    FormGroup = "" # Form Transaction

    #------------------------------Add Transaction Inputs------------------#

    LEReceiptNo = "" # Input Receipt Number
    DateTrans = "" # Date Chooser Trans
    LEName = "" # Input Supplier Name
    LEAddress = "" # Input Address
    LEArticle = "" # Input Article
    LEUnit = "" # Input Unit
    LEPrice = "" # Input Price
    LEQuantity = "" # Input Qunatity
    LETotal = "" # Input Total

    #------------------------------Add Transaction Buttons------------------#

    BtnClear = "" # Clear BTN
    BtnCancel = "" # Cancel BTN
    BtnSubmit = "" # Submit BTN

    def show_form_trans():
      Ui_FormTrans.FormGroup.show()

      #Reset Selected Row
      Ui_Trans.TBLTrans_id = 0
      Ui_Trans.TBLTrans_selectedRow = 0

      
      # Date Min Max
      try:
        cursor = con.cursor()
        query = f"SELECT * FROM `projects` WHERE `project_id`={Ui_Trans.project_id}"
        cursor.execute(query)
        res = cursor.fetchall()
        d1=""
        d2=""
        for x in res:
            d1=x[4]
            d2=x[5]

        # process date
        startdate = QDate(Ui_Trans.process_date(d1))
        enddate = QDate(Ui_Trans.process_date(d2))
        # set min max
        Ui_FormTrans.DateTrans.setMinimumDate(startdate)
        Ui_FormTrans.DateTrans.setMaximumDate(enddate)
        #set date start dates
        set_start = QDate(startdate)
        Ui_FormTrans.DateTrans.setDate(set_start)

      except:
        print("Server Error")

    def hide_form_trans():

      if (Dialog.confirm_dialog("Are you sure you want to cancel?") == QMessageBox.Ok):
        Ui_FormTrans.FormGroup.hide()
        Ui_FormTrans.clear_trans()

    def submit_trans():

      if (Dialog.confirm_dialog("Are you sure you want to submit") == QMessageBox.Ok):
        #Date of Transaction
        date = (f"{Ui_FormTrans.DateTrans.date().year()},{Ui_FormTrans.DateTrans.date().month()},{Ui_FormTrans.DateTrans.date().day()}")
        #Inputs
        receipt = Ui_FormTrans.LEReceiptNo.text()
        name = Ui_FormTrans.LEName.text()
        address = Ui_FormTrans.LEAddress.text()
        article = Ui_FormTrans.LEArticle.toPlainText()
        unit = Ui_FormTrans.LEUnit.text()
        price = Ui_FormTrans.LEPrice.text()
        quantity = Ui_FormTrans.LEQuantity.text()
        total = Ui_FormTrans.LETotal.text()



        if (receipt == "") | (name == "") | (address == "") | (article == "") | (unit == "") | (price == "") | (
            quantity == "")| ( total == ""):

            Dialog.msg_dialog("Please complete the form first")

        elif (float(total) < 1):
            Dialog.msg_dialog("Invalid Amount")

        else:

            try:
              cursor = con.cursor()
              query1="INSERT INTO transaction(project_id,receipt_no,trans_date,supplier,address,articles,unit,unit_price,quantity,total) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
              query2=(Ui_Trans.project_id,receipt,date,name,address,article,unit,price,quantity,total)
              cursor.execute(query1,query2)
              con.commit()

              cursor.execute("SELECT * FROM `transaction`")
              res = cursor.fetchall()
              

              Dialog.msg_dialog("Transaction saved successfuly")
              Ui_Activity.record_activity("admin",f"Transaction Record Added from Project: {Ui_Trans.projectName}")

              # Reset TBL and Insert Data (Refresh Table)
              Ui_Trans.insert_trans(Ui_Trans.not_editable,False)
              #Hide & Clear Data
              Ui_FormTrans.FormGroup.hide()
              Ui_FormTrans.clear_trans()


            except mysql.connector.Error as e:
              Dialog.msg_dialog(str(e))


            
    def clear_trans():

      try:
        #Date
        now = QDate.currentDate()
        Ui_FormTrans.DateTrans.setDate(now)
        #Inputs
        Ui_FormTrans.LEReceiptNo.setText("")
        Ui_FormTrans.LEName.setText("")
        Ui_FormTrans.LEAddress.setText("")
        Ui_FormTrans.LEArticle.setPlainText("")
        Ui_FormTrans.LEUnit.setText("")
        Ui_FormTrans.LEPrice.setText("")
        Ui_FormTrans.LEQuantity.setText("")
        Ui_FormTrans.LETotal.setText("")
      except:
        Dialog.msg_dialog(str(sys.exc_info()))  

    def clear_trans_dialog():

      if (Dialog.confirm_dialog("Are you sure you want to clear?") == QMessageBox.Ok):
        Ui_FormTrans.clear_trans()

    def calc_total():
      price = Ui_FormTrans.LEPrice.text()
      quantity = Ui_FormTrans.LEQuantity.text()

      if (len(quantity)>0) & (len(price)>0):
        Ui_FormTrans.LETotal.setText(str(float(price) * float(quantity)))

      

        
    def FormTrans(DashbaordWindow):

      # Form Transaction Group
      Ui_FormTrans.FormGroup = QtWidgets.QGroupBox(DashbaordWindow)
      Ui_FormTrans.FormGroup.setGeometry(QtCore.QRect(0, 0, 1230, 703))
      Ui_FormTrans.FormGroup.setStyleSheet("color:white;border:none;")
      Ui_FormTrans.FormGroup.setTitle("")
      Ui_FormTrans.FormGroup.setObjectName("FormTrsanss")
      Ui_FormTrans.FormGroup.hide()

      #BG Transaction Form
      BGForm = QtWidgets.QLabel(Ui_FormTrans.FormGroup)
      BGForm.setGeometry(QtCore.QRect(-1, 0, 1231, 703))
      BGForm.setStyleSheet("background-color: rgb(0, 0, 0,.8);")
      BGForm.setText("")
      BGForm.setObjectName("BGForm")

      # Form Transaction Widget 
      FormTrans = QtWidgets.QGroupBox(Ui_FormTrans.FormGroup)
      FormTrans.setGeometry(QtCore.QRect(330, 70, 561, 571))
      FormTrans.setStyleSheet("color:white;border:none;")
      FormTrans.setTitle("")
      FormTrans.setObjectName("FormTrans")

      # BG Form
      BGFormTrans = QtWidgets.QLabel(FormTrans)
      BGFormTrans.setGeometry(QtCore.QRect(0, 0, 561, 571))
      BGFormTrans.setStyleSheet("color: rgb(255, 255, 255);background-color: rgb(80, 0, 2,.7);border:1px solid white;border-radius:8px;")
      BGFormTrans.setText("")
      BGFormTrans.setObjectName("BGFormTrans")

      #Font Initialization
      font = QtGui.QFont()
      font.setFamily("Calibri")
      font.setPointSize(26)
      font.setBold(True)
      font.setWeight(75)

      # Label Add Transaction Title
      LBTAddTrans = QtWidgets.QLabel(FormTrans)
      LBTAddTrans.setGeometry(QtCore.QRect(40, 17, 481, 41))
      LBTAddTrans.setFont(font)
      LBTAddTrans.setStyleSheet("background:transparent;")
      LBTAddTrans.setAlignment(QtCore.Qt.AlignCenter)
      LBTAddTrans.setObjectName("LBTAddTrans")

      # Label Receipt Number
      font.setBold(True)
      font.setPointSize(12)
      LBReceiptNo = QtWidgets.QLabel(FormTrans)
      LBReceiptNo.setGeometry(QtCore.QRect(40, 71, 111, 21))
      LBReceiptNo.setFont(font)
      LBReceiptNo.setObjectName("LBReceiptNo")

      #Input Receipt Number
      font.setBold(False)
      Ui_FormTrans.LEReceiptNo = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LEReceiptNo.setGeometry(QtCore.QRect(40, 90, 231, 31))
      Ui_FormTrans.LEReceiptNo.setFont(font)
      Ui_FormTrans.LEReceiptNo.setStyleSheet("border-radius:5px;color:black")
      Ui_FormTrans.LEReceiptNo.setObjectName("LEReceiptNo")
      Ui_FormTrans.LEReceiptNo.setPlaceholderText("Enter Receipt Number")

      # Receipt Num Validator
      my_regex = QtCore.QRegExp("^[0-9]*$")
      my_validator = QtGui.QRegExpValidator(my_regex,Ui_FormTrans.LEReceiptNo)
      Ui_FormTrans.LEReceiptNo.setValidator(my_validator)

      # Label Date Trans
      font.setBold(True)
      LBTransDate = QtWidgets.QLabel(FormTrans)
      LBTransDate.setGeometry(QtCore.QRect(290, 72, 211, 16))
      LBTransDate.setFont(font)
      LBTransDate.setStyleSheet("")
      LBTransDate.setObjectName("LBTransDate")
      
      # Input Date Trans
      font.setBold(False)
      Ui_FormTrans.DateTrans = QtWidgets.QDateEdit(FormTrans)
      Ui_FormTrans.DateTrans.setGeometry(QtCore.QRect(290, 90, 231, 31))
      Ui_FormTrans.DateTrans.setFont(font)
      Ui_FormTrans.DateTrans.setStyleSheet("border-radius:5px;color:black")
      Ui_FormTrans.DateTrans.setCalendarPopup(True)
      Ui_FormTrans.DateTrans.setObjectName("DateTrans")


      # Label Supplier Name
      font.setBold(True)
      LBName = QtWidgets.QLabel(FormTrans)
      LBName.setGeometry(QtCore.QRect(40, 128, 121, 16))
      LBName.setFont(font)
      LBName.setObjectName("LBName")

      # Input Supplier Name
      font.setBold(False)
      Ui_FormTrans.LEName = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LEName.setGeometry(QtCore.QRect(40, 145, 481, 31))
      Ui_FormTrans.LEName.setFont(font)
      Ui_FormTrans.LEName.setStyleSheet("border-radius:5px;color:black;")
      Ui_FormTrans.LEName.setObjectName("LEName")
      Ui_FormTrans.LEName.setPlaceholderText("Enter Supplier's Name")

      # Label Address
      font.setBold(True)
      LBAddress = QtWidgets.QLabel(FormTrans)
      LBAddress.setGeometry(QtCore.QRect(40, 185, 141, 16))
      LBAddress.setFont(font)
      LBAddress.setObjectName("LBAddress")

      # Input Address
      font.setBold(False)
      Ui_FormTrans.LEAddress = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LEAddress.setGeometry(QtCore.QRect(40, 202, 481, 31))
      Ui_FormTrans.LEAddress.setFont(font)
      Ui_FormTrans.LEAddress.setStyleSheet("border-radius:5px;color:black")
      Ui_FormTrans.LEAddress.setText("")
      Ui_FormTrans.LEAddress.setObjectName("LEAddress")
      Ui_FormTrans.LEAddress.setPlaceholderText("Enter Complete Address")

      # Label Article
      font.setBold(True)
      LBArticle = QtWidgets.QLabel(FormTrans)
      LBArticle.setGeometry(QtCore.QRect(40, 241, 111, 21))
      LBArticle.setFont(font)
      LBArticle.setObjectName("LBArticle")

      # Input Article
      font.setBold(False)
      Ui_FormTrans.LEArticle = QtWidgets.QPlainTextEdit(FormTrans)
      Ui_FormTrans.LEArticle.setGeometry(QtCore.QRect(40, 260, 231, 191))
      Ui_FormTrans.LEArticle.setFont(font)
      Ui_FormTrans.LEArticle.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
      Ui_FormTrans.LEArticle.setStyleSheet("border-radius:5px;background-color: palette(base);color:black;")
      Ui_FormTrans.LEArticle.setPlainText("")
      Ui_FormTrans.LEArticle.setObjectName("LEArticle")

      # Label unit
      font.setBold(True)
      LBUnit = QtWidgets.QLabel(FormTrans)
      LBUnit.setGeometry(QtCore.QRect(290, 241, 111, 21))
      LBUnit.setFont(font)
      LBUnit.setObjectName("LBUnit")

      #Input Unit
      font.setBold(False)
      Ui_FormTrans.LEUnit = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LEUnit.setGeometry(QtCore.QRect(289, 260, 231, 31))
      Ui_FormTrans.LEUnit.setFont(font)
      Ui_FormTrans.LEUnit.setStyleSheet("border-radius:5px;color:black;")
      Ui_FormTrans.LEUnit.setObjectName("LEUnit")
      Ui_FormTrans.LEUnit.setPlaceholderText("Enter Unit Type")

      # Label Price
      font.setBold(True)
      LBPrice = QtWidgets.QLabel(FormTrans)
      LBPrice.setGeometry(QtCore.QRect(290, 295, 111, 21))
      LBPrice.setFont(font)
      LBPrice.setObjectName("LBPrice")

      # Input Price
      font.setBold(False)
      Ui_FormTrans.LEPrice = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LEPrice.setGeometry(QtCore.QRect(289, 314, 231, 31))
      Ui_FormTrans.LEPrice.setFont(font)
      Ui_FormTrans.LEPrice.setStyleSheet("border-radius:5px;color:black")
      Ui_FormTrans.LEPrice.setObjectName("LEPrice")
      Ui_FormTrans.LEPrice.setPlaceholderText("Enter Unit Price")

      # Price Num Validator
      my_regex = QtCore.QRegExp("^\\d{1,6}(\\.\\d{1,2})?$")
      my_validator = QtGui.QRegExpValidator(my_regex,Ui_FormTrans.LEPrice)
      Ui_FormTrans.LEPrice.setValidator(my_validator)

      # Label Quantity
      font.setBold(True)
      LBQuantity = QtWidgets.QLabel(FormTrans)
      LBQuantity.setGeometry(QtCore.QRect(290, 348, 111, 21))
      LBQuantity.setFont(font)
      LBQuantity.setObjectName("LBQuantity")

      # Input Quantity
      font.setBold(False)
      Ui_FormTrans.LEQuantity = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LEQuantity.setGeometry(QtCore.QRect(289, 367, 231, 31))
      Ui_FormTrans.LEQuantity.setFont(font)
      Ui_FormTrans.LEQuantity.setStyleSheet("border-radius:5px;color:black;")
      Ui_FormTrans.LEQuantity.setObjectName("LEQuantity")
      Ui_FormTrans.LEQuantity.setPlaceholderText("Enter Quantity")

      # Quantity Num Validator
      my_regex = QtCore.QRegExp("^\\d{1,6}(\\.\\d{1,2})?$")
      my_validator = QtGui.QRegExpValidator(my_regex,Ui_FormTrans.LEQuantity)
      Ui_FormTrans.LEQuantity.setValidator(my_validator)

      # Label Total
      font.setBold(True)
      LBTotal = QtWidgets.QLabel(FormTrans)
      LBTotal.setGeometry(QtCore.QRect(291, 401, 111, 21))
      LBTotal.setFont(font)
      LBTotal.setObjectName("LBTotal")

      # Input Total
      font.setBold(False)
      Ui_FormTrans.LETotal = QtWidgets.QLineEdit(FormTrans)
      Ui_FormTrans.LETotal.setGeometry(QtCore.QRect(290, 420, 231, 31))
      Ui_FormTrans.LETotal.setFont(font)
      Ui_FormTrans.LETotal.setStyleSheet("border-radius:5px;color:black;")
      Ui_FormTrans.LETotal.setObjectName("LETotal")
      Ui_FormTrans.LETotal.setPlaceholderText("Total Price")
      Ui_FormTrans.LETotal.setEnabled(False)

      #-------------------------------Buttons----------------------------#

      # Font Buttons
      font.setBold(True)
      font.setWeight(75)

      # Button Clear
      Ui_FormTrans.BtnClear = QtWidgets.QPushButton(FormTrans)
      Ui_FormTrans.BtnClear.setGeometry(QtCore.QRect(40, 510, 101, 31))
      Ui_FormTrans.BtnClear.setFont(font)
      Ui_FormTrans.BtnClear.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_FormTrans.BtnClear.setStyleSheet("background-color: rgb(0, 0, 0,.9);border-radius:8px;")
      icon = QtGui.QIcon()
      icon.addPixmap(QtGui.QPixmap(":/Icons/Assets/FormClearIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_FormTrans.BtnClear.setIcon(icon)
      Ui_FormTrans.BtnClear.setIconSize(QtCore.QSize(30, 30))
      Ui_FormTrans.BtnClear.setObjectName("BtnClear")

      #Button Cancel
      Ui_FormTrans.BtnCancel = QtWidgets.QPushButton(FormTrans)
      Ui_FormTrans.BtnCancel.setGeometry(QtCore.QRect(420, 510, 101, 31))
      Ui_FormTrans.BtnCancel.setFont(font)
      Ui_FormTrans.BtnCancel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_FormTrans.BtnCancel.setStyleSheet("background-color: rgb(0, 0, 0,.9);border-radius:8px;")
      icon1 = QtGui.QIcon()
      icon1.addPixmap(QtGui.QPixmap(":/Icons/Assets/FormCancelIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_FormTrans.BtnCancel.setIcon(icon1)
      Ui_FormTrans.BtnCancel.setIconSize(QtCore.QSize(30, 30))
      Ui_FormTrans.BtnCancel.setObjectName("BtnCancel")
      
      #Button Submit
      Ui_FormTrans.BtnSubmit = QtWidgets.QPushButton(FormTrans)
      Ui_FormTrans.BtnSubmit.setGeometry(QtCore.QRect(300, 510, 101, 31))
      Ui_FormTrans.BtnSubmit.setFont(font)
      Ui_FormTrans.BtnSubmit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
      Ui_FormTrans.BtnSubmit.setStyleSheet("background-color: rgb(0, 0, 0,.9);border-radius:8px;")
      icon2 = QtGui.QIcon()
      icon2.addPixmap(QtGui.QPixmap(":/Icons/Assets/FormSubmitIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
      Ui_FormTrans.BtnSubmit.setIcon(icon2)
      Ui_FormTrans.BtnSubmit.setIconSize(QtCore.QSize(30, 30))
      Ui_FormTrans.BtnSubmit.setObjectName("BtnSubmit")

      
      QtCore.QMetaObject.connectSlotsByName(DashbaordWindow)


      # Default Set Text
      _translate = QtCore.QCoreApplication.translate
      LBTAddTrans.setText(_translate("DashbaordWindow", "Add Transaction"))
      LBName.setText(_translate("DashbaordWindow", "Supplier\'s Name"))
      LBAddress.setText(_translate("DashbaordWindow", "Complete Address"))
      LBTransDate.setText(_translate("DashbaordWindow", "Transaction Date"))
      LBReceiptNo.setText(_translate("DashbaordWindow", "Receipt Number"))
      Ui_FormTrans.BtnClear.setText(_translate("DashbaordWindow", "Clear"))
      Ui_FormTrans.BtnCancel.setText(_translate("DashbaordWindow", "Cancel"))
      Ui_FormTrans.BtnSubmit.setText(_translate("DashbaordWindow", "Submit"))
      LBArticle.setText(_translate("DashbaordWindow", "Articles"))
      LBUnit.setText(_translate("DashbaordWindow", "Unit"))
      LBPrice.setText(_translate("DashbaordWindow", "Price Per Unit"))
      LBQuantity.setText(_translate("DashbaordWindow", "Quantity"))
      LBTotal.setText(_translate("DashbaordWindow", "Total Amount"))

      #function
      Ui_FormTrans.BtnClear.clicked.connect(Ui_FormTrans.clear_trans_dialog)
      Ui_FormTrans.BtnCancel.clicked.connect(Ui_FormTrans.hide_form_trans)
      Ui_FormTrans.BtnSubmit.clicked.connect(Ui_FormTrans.submit_trans)

      # Key Event Function
      Ui_FormTrans.LEQuantity.textEdited.connect(Ui_FormTrans.calc_total)
      Ui_FormTrans.LEPrice.textEdited.connect(Ui_FormTrans.calc_total)

